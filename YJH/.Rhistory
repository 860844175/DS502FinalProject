# check R version
R.Version()$major
# set up document
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "")
library(pander)
library(knitr)
library(skimr)
library(kableExtra)
library(tinytex)
library(dplyr)
library(purrr)
local({
hook_inline = knitr::knit_hooks$get('inline')
knitr::knit_hooks$set(inline = function(x) {
res = hook_inline(x)
if (is.numeric(x)) sprintf('$%s$', res) else res
})
})
# define printf function
printf <- function(...)print(sprintf(...))
test = read.csv("./SourceData/test_p3.csv")
y_test = test$SalePrice
x_test = subset (test, select = -SalePrice)
train = read.csv("./SourceData/train_p3.csv")
y_train = train$SalePrice
x_train = subset (train, select = -SalePrice)
y_train = as.numeric(y_train)
y_test = as.numeric(y_test)
summary(y_train)
set.seed(2)
bs = sample(dim(train)[1],dim(train)[1],replace = T)
train = train[bs,]
X_train = model.matrix(SalePrice~.,data = train)[,-1]
X_test = model.matrix(SalePrice~.,test)[,-1]
y_train = train$SalePrice
y_test = test$SalePrice
set.seed(1234)
grid=10^seq(10,-2, length =100)
Ridge.Alpha=0
Ridge.Fit = glmnet(X_train, y_train, alpha=Ridge.Alpha, lambda=grid)
# Import model libraries
library(pls)
library(randomForest)
library(gam)
library(glmnet)
library(ggplot2)
library(corrplot)
library(tidyverse)
library(caret)
library(mgcv)
library(Metrics)
library(visreg)
set.seed(1234)
grid=10^seq(10,-2, length =100)
Ridge.Alpha=0
Ridge.Fit = glmnet(X_train, y_train, alpha=Ridge.Alpha, lambda=grid)
Ridge.Fitcv = cv.glmnet(X_train, y_train, alpha = Ridge.Alpha,nfolds = 10,type.measure = 'deviance')
best.lambda1 = Ridge.Fitcv$lambda.min
best.lambda1
## with crossvaldiation, we get the optimal lambda is equal to 0.0341
plot(Ridge.Fitcv)
